\name{PositionFilter-class}
\Rdversion{1.1}
\docType{class}
\alias{AlignmentIdFilter-class}
\alias{ArrayFilter-class}
\alias{DatabaseFilter-class}
\alias{PositionFilter-class}
\alias{PreMirnaConfidence-class}
\alias{PreMirnaFilter-class}
\alias{PreMirnaIdFilter-class}
\alias{ProbesetIdFilter-class}
\alias{MatMirnaConfidence-class}
\alias{MatMirnaFilter-class}
\alias{MatMirnaIdFilter-class}
\alias{MirfamFilter-class}
\alias{MirfamIdFilter-class}
\alias{ReadCountFilter-class}
% column, Filter, MirhostDb, missing
\alias{column,AlignmentIdFilter,MirhostDb,missing-method}
\alias{column,ArrayFilter,MirhostDb,missing-method}
\alias{column,DatabaseFilter,MirhostDb,missing-method}
\alias{column,MatMirnaConfidence,MirhostDb,missing-method}
\alias{column,MatMirnaFilter,MirhostDb,missing-method}
\alias{column,MatMirnaIdFilter,MirhostDb,missing-method}
\alias{column,MirfamFilter,MirhostDb,missing-method}
\alias{column,MirfamIdFilter,MirhostDb,missing-method}
\alias{column,PositionFilter,MirhostDb,missing-method}
\alias{column,PreMirnaConfidence,MirhostDb,missing-method}
\alias{column,PreMirnaFilter,MirhostDb,missing-method}
\alias{column,PreMirnaIdFilter,MirhostDb,missing-method}
\alias{column,ProbesetIdFilter,MirhostDb,missing-method}
\alias{column,ReadCountFilter,MirhostDb,missing-method}
% where, Filter, MirhostDb, missing
\alias{where,AlignmentIdFilter,MirhostDb,missing-method}
\alias{where,ArrayFilter,MirhostDb,missing-method}
\alias{where,DatabaseFilter,MirhostDb,missing-method}
\alias{where,MatMirnaConfidence,MirhostDb,missing-method}
\alias{where,MatMirnaFilter,MirhostDb,missing-method}
\alias{where,MatMirnaIdFilter,MirhostDb,missing-method}
\alias{where,MirfamFilter,MirhostDb,missing-method}
\alias{where,MirfamIdFilter,MirhostDb,missing-method}
\alias{where,PositionFilter,MirhostDb,missing-method}
\alias{where,PreMirnaConfidence,MirhostDb,missing-method}
\alias{where,PreMirnaFilter,MirhostDb,missing-method}
\alias{where,PreMirnaIdFilter,MirhostDb,missing-method}
\alias{where,ProbesetIdFilter,MirhostDb,missing-method}
\alias{where,ReadCountFilter,MirhostDb,missing-method}
% column, Filter, MirhostDb, character
\alias{column,AlignmentIdFilter,MirhostDb,character-method}
\alias{column,ArrayFilter,MirhostDb,character-method}
\alias{column,DatabaseFilter,MirhostDb,character-method}
\alias{column,MatMirnaConfidence,MirhostDb,character-method}
\alias{column,MatMirnaFilter,MirhostDb,character-method}
\alias{column,MatMirnaIdFilter,MirhostDb,character-method}
\alias{column,MirfamFilter,MirhostDb,character-method}
\alias{column,MirfamIdFilter,MirhostDb,character-method}
\alias{column,PositionFilter,MirhostDb,character-method}
\alias{column,PreMirnaConfidence,MirhostDb,character-method}
\alias{column,PreMirnaFilter,MirhostDb,character-method}
\alias{column,PreMirnaIdFilter,MirhostDb,character-method}
\alias{column,ProbesetIdFilter,MirhostDb,character-method}
\alias{column,ReadCountFilter,MirhostDb,character-method}
% where, Filter, MirhostDb, character
\alias{where,AlignmentIdFilter,MirhostDb,character-method}
\alias{where,ArrayFilter,MirhostDb,character-method}
\alias{where,DatabaseFilter,MirhostDb,character-method}
\alias{where,MatMirnaConfidence,MirhostDb,character-method}
\alias{where,MatMirnaFilter,MirhostDb,character-method}
\alias{where,MatMirnaIdFilter,MirhostDb,character-method}
\alias{where,MirfamFilter,MirhostDb,character-method}
\alias{where,MirfamIdFilter,MirhostDb,character-method}
\alias{where,PositionFilter,MirhostDb,character-method}
\alias{where,PreMirnaConfidence,MirhostDb,character-method}
\alias{where,PreMirnaFilter,MirhostDb,character-method}
\alias{where,PreMirnaIdFilter,MirhostDb,character-method}
\alias{where,ProbesetIdFilter,MirhostDb,character-method}
\alias{where,ReadCountFilter,MirhostDb,character-method}
% column
\alias{where,list,MirhostDb,missing,missing-method}
\alias{column,AlignmentIdFilter,missing,missing-method}
\alias{column,ArrayFilter,missing,missing-method}
\alias{column,DatabaseFilter,missing,missing-method}
\alias{column,MatMirnaConfidence,missing,missing-method}
\alias{column,MatMirnaFilter,missing,missing-method}
\alias{column,MatMirnaIdFilter,missing,missing-method}
\alias{column,MirfamFilter,missing,missing-method}
\alias{column,MirfamIdFilter,missing,missing-method}
\alias{column,PositionFilter,missing,missing-method}
\alias{column,PreMirnaConfidence,missing,missing-method}
\alias{column,PreMirnaFilter,missing,missing-method}
\alias{column,PreMirnaIdFilter,missing,missing-method}
\alias{column,ProbesetIdFilter,missing,missing-method}
\alias{column,ReadCountFilter,missing,missing-method}
% where
\alias{where,AlignmentIdFilter,missing,missing-method}
\alias{where,ArrayFilter,missing,missing-method}
\alias{where,DatabaseFilter,missing,missing-method}
\alias{where,MatMirnaConfidence,missing,missing-method}
\alias{where,MatMirnaFilter,missing,missing-method}
\alias{where,MatMirnaIdFilter,missing,missing-method}
\alias{where,MirfamFilter,missing,missing-method}
\alias{where,MirfamIdFilter,missing,missing-method}
\alias{where,PositionFilter,missing,missing-method}
\alias{where,PreMirnaConfidence,missing,missing-method}
\alias{where,PreMirnaFilter,missing,missing-method}
\alias{where,PreMirnaIdFilter,missing,missing-method}
\alias{where,ProbesetIdFilter,missing,missing-method}
\alias{where,ReadCountFilter,missing,missing-method}
\alias{where,list,MirhostDb,ANY-method}
% value
\alias{value,AlignmentIdFilter-method}
\alias{value,ArrayFilter-method}
\alias{value,DatabaseFilter-method}
\alias{value,MatMirnaConfidence-method}
\alias{value,MatMirnaFilter-method}
\alias{value,MatMirnaIdFilter-method}
\alias{value,MirfamFilter-method}
\alias{value,MirfamIdFilter-method}
\alias{value,PositionFilter-method}
\alias{value,PreMirnaConfidence-method}
\alias{value,PreMirnaFilter-method}
\alias{value,PreMirnaIdFilter-method}
\alias{value,ProbesetIdFilter-method}
\alias{value,ReadCountFilter-method}
%% % value<-
%% \alias{value<-,AlignmentIdFilter-method}
%% \alias{value<-,ArrayFilter-method}
%% \alias{value<-,DatabaseFilter-method}
%% \alias{value<-,MatMirnaConfidence-method}
%% \alias{value<-,MatMirnaFilter-method}
%% \alias{value<-,MatMirnaIdFilter-method}
%% \alias{value<-,MirfamFilter-method}
%% \alias{value<-,MirfamIdFilter-method}
%% \alias{value<-,PositionFilter-method}
%% \alias{value<-,PreMirnaConfidence-method}
%% \alias{value<-,PreMirnaFilter-method}
%% \alias{value<-,PreMirnaIdFilter-method}
%% \alias{value<-,ProbesetIdFilter-method}
%% \alias{value<-,ReadCountFilter-method}
% condition
\alias{condition,AlignmentIdFilter-method}
\alias{condition,ArrayFilter-method}
\alias{condition,DatabaseFilter-method}
\alias{condition,MatMirnaConfidence-method}
\alias{condition,MatMirnaFilter-method}
\alias{condition,MatMirnaIdFilter-method}
\alias{condition,MirfamFilter-method}
\alias{condition,MirfamIdFilter-method}
\alias{condition,PositionFilter-method}
\alias{condition,PreMirnaConfidence-method}
\alias{condition,PreMirnaFilter-method}
\alias{condition,PreMirnaIdFilter-method}
\alias{condition,ProbesetIdFilter-method}
\alias{condition,ReadCountFilter-method}
%% % condition<-
%% \alias{condition<-,AlignmentIdFilter-method}
%% \alias{condition<-,ArrayFilter-method}
%% \alias{condition<-,DatabaseFilter-method}
%% \alias{condition<-,MatMirnaConfidence-method}
%% \alias{condition<-,MatMirnaFilter-method}
%% \alias{condition<-,MatMirnaIdFilter-method}
%% \alias{condition<-,MirfamFilter-method}
%% \alias{condition<-,MirfamIdFilter-method}
%% \alias{condition<-,PositionFilter-method}
%% \alias{condition<-,PreMirnaConfidence-method}
%% \alias{condition<-,PreMirnaFilter-method}
%% \alias{condition<-,PreMirnaIdFilter-method}
%% \alias{condition<-,ProbesetIdFilter-method}
%% \alias{condition<-,ReadCountFilter-method}
\alias{column}
\alias{where}

\title{Filter results fetched from the miRNA host genes database}

\description{
  These classes allow to specify which entries (i.e. mature miRNAs,
  pre-miRNAs etc. should be retrieved from the database).
}

\section{Objects from the Class}{
  While objects can be created by calls
  e.g. of the form \code{new("PositionFilter", ...)} users are strongly
  encouraged to use the specific functions:
  \code{\link{AlignmentIdFilter}}, \code{\link{ArrayFilter}},
  \code{\link{DatabaseFilter}}, \code{\link{MatMirnaConfidence}},
  \code{\link{MatMirnaFilter}}, \code{\link{MatMirnaIdFilter}},
  \code{\link{MirfamFilter}} and \code{\link{MirfamIdFilter}},
  \code{\link{PositionFilter}}, \code{\link{PreMirnaConfidence}}
  \code{\link{PreMirnaFilter}}, \code{\link{PreMirnaIdFilter}},
  \code{\link{ProbesetIdFilter}} and \code{\link{ReadCountFilter}}.  See
  examples below for usage.
}

\section{Slots}{
  \describe{
    \item{condition}{
      Object of class \code{"character"}: can be
      either \code{"="}, \code{"in"} or \code{"like"} to filter on character values
      (e.g. gene id, gene biotype, seqname etc), or \code{"="}, \code{">"}
      or \code{"<"} for numerical values (chromosome/seq
      coordinates). Note that for \code{"like"} \code{value} should be a
      SQL pattern (e.g. \code{"ENS\%"} that matches all values starting
      with \code{"ENS"}).
    }

    \item{match.case}{
      Object of class \code{"logical"}: for
      \code{PreMirnaFilter} and \code{MatMirnaFilter} specifying whether
      case sensitive or in-sensitive queries should be performed for
      the pre-miRNA or mature miRNA names.
    }

    \item{of}{
      For \code{ReadCountFilter}: spefifying the database table in which
      the read counts are stored (i.e. either \code{"pre_mirna"} or
      \code{"mat_mirna"}).
    }

    \item{value}{
      Object of class \code{"character"}: the value
      to be used for filtering.
    }

  }
}
\section{Extends}{
  Class \code{"AnnotationFilter"} defined in the \code{AnnotationFilter} package.
}
\section{Methods}{

  (in alphabetic order)

  \describe{

    \item{column}{
      \code{signature(object = "PositionFilter", db = "MirhostDb",
      with.tables="character")}: returns the column (table column name
      in the miRNA host genes database) to be used for the
      filtering. The method can be applied to any filter class defined
      in the \code{mirhostgenes} or \code{ensembldb} packages. Argument
      \code{with.tables} allows to restrict the filter to be applied to
      certain database tables. By default the filter is applied to all
      database tables.

      The method returns a character string with the name of the column.
    }

    \item{condition}{
      Get the \code{condition} of the filter (i.e. how values
      should be compared).

      The \code{condition} method returns a character string
      representing the condition.
    }

    \item{value}{
      Get the \code{value} of the filter.

      The \code{value} method returns a character vector of the
      value(s).
    }

    \item{where}{
      \code{signature(object = "PositionFilter", db = "MirhostDb",
      with.tables="character")}: returns the where clause for the SQL
      call to the miRNA host genes database. The method can be applied
      to any filter class defined in the \code{mirhostgenes} or
      \code{ensembldb} packages. Argument
      \code{with.tables} allows to restrict the filter to be applied to
      certain database tables. By default the filter is applied to all
      database tables.

      The method returns the SQL \emph{where} clause that will be used
      to restrict the results returned by the database. This string is
      dependent on the type of database.
    }

  }
}
\details{
  Description of filters (in alphabetical order).

  \describe{
    \item{AlignmentIdFilter}{
      Allows to filter results based on the (internal) alignment ID
      for a pre-miRNA. The same pre-miRNA sequence might have multiple
      genomic alignments, thus, the alignment ID was introduced
      ensure an unique identifier in the database. Both, the mature
      miRNAs and the host transcripts are linked via this ID
      to the pre-miRNA alignment.
    }

    \item{ArrayFilter}{
      Allows to filter results based on provided
      microarray names (e.g. \code{"HG-U133_Plus_2"}). Use the method
      \code{\link{listArrays}} to get a list of available microarray names.
    }

    \item{DatabaseFilter}{
      Allows to restrict results to genes/transcripts defined in the
      speciefied databases. Since the database contains gene/transcripts
      defined in various databases (e.g. Ensembl, Vega, NCBI RefSeq)
      restricting the results to one database helps avoiding redundant
      gene/transcript definitions.
      Use the method \code{\link{listDatabases}}
      to get a list of supported values.
    }

    \item{MarmirnaConfidence}{
      Allows to filter on the confidence information for mature and
      pre-miRNAs stored in the miRBase. Requires that the corresponding
      information have been extracted from the miRBase and inserted into
      the \code{MirhostDb} database. Note that miRBase prior version 21 did
      not provide mature miRNA confidence information.
      Also, at present, the filter allows only to filter the query to
      fetch only high confidence (by specifying \code{value="high"})
      miRNAs.
    }

    \item{MatMirnaFilter}{
      Filter on the mature miRNA names (e.g. \code{"hsa-miR-15b-5p"})
    }

    \item{MatMirnaIdFilter}{
      Filter on the mature miRNA identifiers (i.e. mirbase accession
      numbers, e.g. \code{"MIMAT0000062"}).
    }

    \item{PositionFilter}{
      Allows to filter results based on whether the (mature)
      miRNA is exonic or intronic, i.e. is encoded in an exon
      of the transcript, or in an intron.
    }

    \item{PreMirnaConfidence}{
      See \code{MatMirnaConfidence} above for a description. In contrast
      to mature miRNAs, also miRBase versions prior to version 21 did
      provide high confidence information.
    }

    \item{PreMirnaFilter}{
      Allows to filter on pre-miRNA names (e.g. \code{"hsa-mir-15b"}).
    }

    \item{PreMirnaIdFilter}{
      Allows to filter on pre-miRNA identifiers (mirbase accession
      numbers, e.g. \code{"MI0000060"}).
    }

    \item{ProbesetIdFilter}{
      Allows to filter on microarray probe set IDs.
    }

    \item{ReadCountFilter}{
      Allows to filter the results by the number of reads from various
      high throughput sequencing experiments mapping to the mature or
      pre-miRNAs.
    }

    In addition to the above classes all Filter classes defined in the
    \code{ensembldb} package. See the vignette for a more detailed
    description.
  }

}
\note{
  All methods for filter classes (also those defined in the
  \code{AnnotationFilter} package,
  i.e. \code{\link[AnnotationFilter]{GeneIdFilter}},
  \code{\link[AnnotationFilter]{GenenameFilter}},
  \code{\link[AnnotationFilter]{GeneBiotypeFilter}},
  \code{\link[AnnotationFilter]{TxIdFilter}},
  \code{\link[AnnotationFilter]{TxBiotypeFilter}},
  \code{\link[AnnotationFilter]{SeqNameFilter}},
  \code{\link[AnnotationFilter]{SeqStrandFilter}},
  should include the
  \code{MirhostDb} class instance as this will cause the
  methods (\code{column} and \code{where}) to return values
  specific for the layout of the miRNA host genes database. See
  examples below for more details.
}
\value{
  See method descriptions above for the return values.
}

\author{
  Johannes Rainer
}
\seealso{
  \code{\link[AnnotationFilter]{GeneIdFilter}},
  \code{\link[AnnotationFilter]{SeqNameFilter}},
  \code{\link{GeneIdFilter}} (in the \code{mirhostgenes} package).
}
\examples{

library(MirhostDb.Hsapiens.v75.v20)
mhdb <- MirhostDb.Hsapiens.v75.v20

## Create a filter that could be used to retrieve all informations for
## the respective gene.
Gif <- GeneIdFilter("ENSG00000012817")
Gif
## Returns the where clause of the SQL querys specific for the
## mirhostgenes database
where(Gif, mhdb)

## Create a filter for a chromosomal end position of a gene
Sef <- SeqEndFilter(10000, condition=">", "gene")
Sef

## Get and set the value of a filter.
value(Sef)

## In the miRNA host genes database we are rather interested to get
## pre-miRNAs from certain genomic positions, thus we define "pre_mirna"
## as the feature and call where by supplying also the MirhostDb
## object
Sef <- SeqEndFilter(1000, condition=">", "pre_mirna")
where(Sef, mhdb)

## Get all high confidence pre-miRNAs.
premirnas(mhdb, filter=PreMirnaConfidence("high"))

## Get all mature miRNAs with more than 1000 reads across all experiments
matmirnas(mhdb, filter=ReadCountFilter(1000, of="mat_mirna"))

}
\keyword{classes}

